# flink job parameters
flink.job.name=edu.triage
parallelism=1
checkpoint.interval.ms=60000

kafka.bootstrap.servers=localhost.localdomain:9092
kafka.acks=all
kafka.group.id=edu.triage

schema.registry.url=http://localhost.localdomain:7790/api/v1

topic.output=edu.triage.output
topic.input=edu.triage.input
enrichment.topic.input=edu.enrichments
enrichment.topic.query.output=edu.enrichments.response
query.input.topic=edu.scoring.input
query.output.topic=edu.scoring.response

geo.enabled=true
geo.ip_fields=ip_src_addr,ip_dst_addr
geo.database_path=hdfs:///user/training/cybersec/data/reference-data/GeoLite2-City.mmdb

asn.enabled=true
asn.ip_fields=ip_src_addr,ip_dst_addr
asn.database_path=hdfs:///user/training/cybersec/data/reference-data/GeoLite2-ASN.mmdb

hbase.enabled=true
enrichments.config=configs/triage/enrichment_storage.json
lookups.config.file=configs/triage/enrichments.json
enrichments.table=enrichments

rest.enabled=true
rest.config.file=config/triage/enrichment-rest.json

stellar.enabled=true
stellar.config.dir=configs/triage/metron/enrichments

stix.enabled=true
stix.input.topic=stix
stix.output.topic=stix.output
stix.hbase.table=threatIntelligence

threatq.enabled=true
threatq.config.file=threatq.json
threatq.topic.input=threats

rules.enabled=false

#kafka.security.protocol=SASL_SSL
#kafka.sasl.mechanism=PLAIN
#kafka.ssl.truststore.location=${KAFKA_TRUSTSTORE}
#kafka.ssl.truststore.password=${KAFKA_TRUSTSTORE_PASSWORD}
#kafka.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CYBERSEC_USER}" password="${CYBERSEC_PASSWORD}"
#schema.registry.client.ssl.trustStorePath=${SCHEMA_REGISTRY_TRUSTSTORE}
#schema.registry.client.ssl.trustStorePassword=${SCHEMA_REGISTRY_TRUSTSTORE_PASSWORD}
